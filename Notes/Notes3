Selenium Class 3

Why do we need an Xpath and CSS Selector?
-- Developers may not provide all the locators in html
-- By using Xpath and CSS we can identify elements with any given attributes

What is an Xpath?
-- Xpath is like a query language which helps us identify elements uniquely
on the webpage

Type of Xpath:
-- Absolute Xpath --> starts from the starting node of the html
                      it always starts with single slash /
                      e.g /html/body/div/div/div

-- Relative Xpath --> starts from any node in html
                      it always starts with double slash //

Syntax for Relative Xpath:
//tagname[@attribute = 'attribute value']

e.g //input[@id = 'email']

Identifying elements by it's text:
//tagname[text() = 'text value']

e.g. //a[text() = 'Create new account']
e.g //h2[text() = 'Connect with friends and the world around you on Facebook.']

Identifying elements by using contains method:
//tagname[contains(@attribute, 'partial attribute value')]
//h2[contains(text(), 'you')]

starts-with will identify elements by its partial starting value
//tagname[starts-with(@attribute, 'partial starting attribute value')]

e.g. //input[starts-with(@aria-label, 'Email')]

ends-with was used in xpath 1.0, we are using 2.0 and this method is not available

Advanced Xpath:
-- is based on parent and child, sibling relationships

identifying elements by following sibling
//tagname[@attribute = 'attribute value']/following-sibling::siblingTagname
e.g //input[@id = 'calFromDate']/following-sibling::img

Identifying elements by preceding siblings
//tagname[@attribute = 'attribute value']/preceding-sibling::siblingTagname
e.g //span[text() = '& Orders']/preceding-sibling :: span

Identifying elements by its parent:
//tagname[@attribute = 'attribute value']/preceding-sibling::parentTagname
//span[text() = '& Orders']/parent::a

Identifying elements by ancestors:
//input[@id = 'email']/ancestor::form

Identifying elements by its index:
(//img[@class = 'ui-datepicker-trigger'])[2]